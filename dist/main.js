"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
;
(function () {
  var lines = document.querySelectorAll(".colors-acco__item");
  for (var index = 0; index < lines.length; index++) {
    var element = lines[index];
    element.addEventListener("click", function (e) {
      e.preventDefault();
      if (e.target.classList.contains("colors-acco__content")) return;
      var currentLine = e.target.closest(".colors-acco__item");
      for (var i = 0; i < lines.length; i++) {
        if (lines[i] !== currentLine) lines[i].classList.remove("colors-acco__item-active");
      }
      if (currentLine.classList.contains("colors-acco__item-active")) {
        currentLine.classList.remove("colors-acco__item-active");
      } else {
        currentLine.classList.add("colors-acco__item-active");
      }
    });
  }
})();
(function () {
  var openElement = document.querySelector(".hamburger");
  var closeElement = document.querySelector(".cross__logo");
  var body = document.body;
  openElement.addEventListener("click", function (e) {
    e.preventDefault();
    var humburgerMenu = document.querySelector("#humburgerMenu");
    humburgerMenu.classList.remove(".hamburger-menu");
    var hamburgerMain = document.querySelector(".hamburger-menu");
    hamburgerMain.classList.toggle("hamburger-main");
  });
  closeElement.addEventListener("click", function (e) {
    e.preventDefault();
    var hamburgerMain = document.querySelector(".hamburger-menu");
    hamburgerMain.classList.remove("hamburger-main");
  });
  humburgerMenu.addEventListener("click", function (e) {
    if (!e.target.classList.contains("hamburger-menu__link")) {
      closeElement.click();
    }
  });
})();
(function () {
  var myMap;
  var init = function init() {
    myMap = new ymaps.Map("yandex-maps", {
      center: [55.751427, 37.617315],
      zoom: 14,
      controls: []
    });
    var coords = [[55.745136, 37.588946], [55.754055, 37.591183], [55.742148, 37.565524]];
    var myCollection = new ymaps.GeoObjectCollection({}, {
      draggable: false,
      iconLayout: 'default#image',
      iconImageHref: "./img/map-marker.png",
      iconImageSize: [30, 42],
      iconImageOffset: [-3, -42]
    });
    coords.forEach(function (coord) {
      myCollection.add(new ymaps.Placemark(coord));
    });
    myMap.geoObjects.add(myCollection);
  };
  ymaps.ready(init);
})();
(function () {
  var validateFields = function validateFields(form, fieldsArray) {
    fieldsArray.forEach(function (field) {
      field.removeClass("input-error");
      if (field.val().trim() === "") {
        field.addClass("input-error");
      }
    });
    var errorFields = form.find(".input-error");
    return errorFields.length === 0;
  };
  $('#form').submit(function (e) {
    e.preventDefault();
    var form = $(e.currentTarget);
    var name = form.find("[name='name']");
    var phone = form.find("[name='phone']");
    var comment = form.find("[name='comment']");
    var to = form.find("[name='to']");
    var modal = $("#modal");
    var content = modal.find(".modal__content");
    modal.removeClass("error-modal");
    var isValid = validateFields(form, [comment, name, phone, to]);
    if (isValid) {
      $.ajax({
        url: "https://webdev-api.loftschool.com/sendmail",
        method: "post",
        data: {
          name: name.val(),
          phone: phone.val(),
          comment: comment.val(),
          to: to.val()
        },
        success: function success(data) {
          content.text(data.message);
          // console.log(data);
          $.fancybox.open({
            src: '#modal',
            type: "inline"
          });
        },
        error: function error(data) {
          // const message = data.responseJSON.messaeg
          // content.text(message);
          // modal.addClass("error-modal");
          content.text('Произошла ошибка, попробуйте снова');
          $.fancybox.open({
            src: '#modal',
            type: "inline"
          });
        }
      });
    }
  });
  $(".app-submit-btn").click(function (e) {
    e.preventDefault();
    $.fancybox.close();
  });
})();
(function () {
  var sections = $("section");
  var display = $(".main-content");
  var sideMenu = $(".fixed-menu");
  var menuItems = sideMenu.find("fixed-menu__item");
  var mobileDetect = new MobileDetect(window.navigator.userAgent);
  var isMobile = mobileDetect.mobile();
  var inScroll = false;
  sections.first().addClass("active");
  var countSectionPosition = function countSectionPosition(sectionsEq) {
    return sectionsEq * -100;
  };
  var resetActiveClassForItem = function resetActiveClassForItem(item, itemEq, activeClass) {
    item.eq(itemEq).addClass(activeClass).siblings().removeClass(activeClass);
  };
  var performTransition = function performTransition(sectionsEq) {
    if (inScroll == false) {
      inScroll = true;
      var position = countSectionPosition(sectionsEq);
      display.css({
        transform: "translateY(".concat(position, "%)")
      });
      resetActiveClassForItem(sections, sectionsEq, "active");
      // sections.eq(sectionsEq).addClass("active").siblings().removeClass("active");	
      setTimeout(function () {
        inScroll = false;
        resetActiveClassForItem(menuItems, sectionsEq, "fixed-menu__item--active");
        sideMenu.find(".fixed-menu__item").eq(sectionsEq).addClass("fixed-menu__item--active").siblings().removeClass("fixed-menu__item--active");
      }, 1300);
    }
  };
  var scrollViewport = function scrollViewport(direction) {
    var activeSection = sections.filter(".active");
    var nextSection = activeSection.next();
    var prevSection = activeSection.prev();
    if (direction == "next" && nextSection.length) {
      performTransition(nextSection.index());
    }
    if (direction == "prev" && prevSection.length) {
      performTransition(prevSection.index());
    }
  };
  $(window).on("wheel", function (e) {
    var deltaY = e.originalEvent.deltaY;
    if (deltaY > 0) {
      scrollViewport("next");
    }
    if (deltaY < 0) {
      scrollViewport("prev");
    }
  });
  $(window).on("keydown", function (e) {
    var tagName = e.target.tagName.toLowerCase();
    if (tagName !== "input" && tagName !== "textarea") {
      switch (e.keyCode) {
        case 38:
          scrollViewport("prev");
          break;
        case 40:
          scrollViewport("next");
          break;
      }
    }
  });
  $(".wrapper").on("touchemove", function (e) {
    return e.preventDefault();
  });
  $("[data-scroll-to]").click(function (e) {
    e.preventDefault();
    var $this = $(e.currentTarget);
    var target = $this.attr("data-scroll-to");
    var reqSection = $("[data-section-id=".concat(target, "]"));
    performTransition(reqSection.index());
    console.log(reqSection.index());
  });
  if (isMobile) {
    $("body").swipe({
      swipe: function swipe(event, direction) {
        var scroller = viewportScroller();
        var scrollDirection = "";
        if (direction === "up") scrollDirection = "next";
        if (direction === "down") scrollDirection = "prev";
        scroller[scrollDirection]();
      }
    });
  }
})();
var player;
var playerContainer = $(".player");
var iventsInit = function iventsInit() {
  $(".player__start").click(function (e) {
    e.preventDefault();
    if (playerContainer.hasClass("paused")) {
      player.pauseVideo();
    } else {
      player.playVideo();
    }
  });
  $(".player__playback").click(function (e) {
    var bar = $(e.currentTarget);
    var clickedPosition = e.originalEvent.layerX;
    var newButtonPositionPercent = clickedPosition / bar.width() * 100;
    var newPlayerBackPositionSec = player.getDuration() / 100 * newButtonPositionPercent;
    $(".player__playback-button").css({
      left: "".concat(newButtonPositionPercent, "%")
    });
    player.seekTo(newPlayerBackPositionSec);
  });
  $(".player__splash").click(function (e) {
    player.playVideo();
  });
};
var formatTime = function formatTime(timeSec) {
  var roundTime = Math.round(timeSec);
  var minutes = addZero(Math.floor(roundTime / 60));
  var seconds = addZero(roundTime - minutes * 60);
  function addZero(num) {
    return num < 10 ? "0".concat(num) : num;
  }
  return "".concat(minutes, " : ").concat(seconds);
};
var onPlayerReady = function onPlayerReady() {
  var interval;
  var durationSec = player.getDuration();
  $(".player__duration-estimate").text(formatTime(durationSec));
  if (typeof interval !== 'undefined') {
    clearInterval(interval);
  }
  interval = setInterval(function () {
    var completedSec = player.getCurrentTime();
    var complitedPercent = completedSec / durationSec * 100;
    $(".player__playback-button").css({
      left: "".concat(complitedPercent, "%")
    });
    $(".player__duration-completed").text(formatTime(completedSec));
  }, 1000);
};
var onPlayerStateChange = function onPlayerStateChange(event) {
  switch (event.data) {
    case 1:
      playerContainer.addClass("active");
      playerContainer.addClass("paused");
      break;
    case 2:
      playerContainer.removeClass("active");
      playerContainer.removeClass("paused");
      break;
  }
};
function onYouTubeIframeAPIReady() {
  console.log('onYouTubeIframeAPIReady');
  player = new YT.Player('yt-player', _defineProperty({
    height: '405',
    width: '660',
    videoId: 'hk3KPa6zWzo',
    playerVars: {
      'playsinline': 1
    },
    events: {
      'onReady': onPlayerReady,
      'onStateChange': onPlayerStateChange
    }
  }, "playerVars", {
    controls: 0,
    disablekb: 0,
    showinfo: 0,
    rel: 0,
    autoplay: 0,
    modestbranding: 0
  }));
}
iventsInit();

// ;(function() {

// })()
;
(function () {
  var findBlockByAlias = function findBlockByAlias(alias) {
    return $(".reviews__item").filter(function (ndx, item) {
      return $(item).attr("data-linked-with") == alias;
    });
  };
  $(".interactive-avatar__link").click(function (e) {
    e.preventDefault();
    var $this = $(e.currentTarget);
    var target = $this.attr("data-open");
    var itemToShow = findBlockByAlias(target);
    var curItem = $this.closest(".reviews__switcher-item");
    itemToShow.addClass("active").siblings().removeClass("active");
    curItem.addClass("active").siblings().removeClass("active");
  });
})();
(function () {
  var left = document.querySelector("#arrow--prew");
  var right = document.querySelector("#arrow--next");
  var itemList = document.querySelector("#slider__list");
  var loop = function loop(direction, e) {
    e.preventDefault();
    if (direction == "right") {
      itemList.appendChild(itemList.firstElementChild);
    } else {
      itemList.insertBefore(itemList.lastElementChild, slider__list.firstElementChild);
    }
  };
  right.addEventListener("click", function (e) {
    loop("right", e);
  });
  left.addEventListener("click", function (e) {
    loop("left", e);
  });
})();
(function () {
  /////////////////////////////////////////////
  // TEAM
  /////////////////////////////////////////////

  var openItem = function openItem(item) {
    var container = item.closest(".team__item");
    var contentBlock = container.find(".team__content");
    var textBlock = contentBlock.find(".team__content-block");
    var reqHeight = textBlock.height();
    container.addClass("active");
    contentBlock.height(reqHeight);
  };
  var closeEveryItem = function closeEveryItem(container) {
    var items = container.find(".team__content");
    var itemContainer = container.find(".team__item");
    itemContainer.removeClass("active");
    items.height(0);
  };
  $(".team__tiltle").click(function (e) {
    var $this = $(e.currentTarget);
    var container = $this.closest(".team");
    var elemContainer = $this.closest(".team__item");
    if (elemContainer.hasClass("active")) {
      closeEveryItem(container);
    } else {
      closeEveryItem(container);
      openItem($this);
    }
  });
})();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
